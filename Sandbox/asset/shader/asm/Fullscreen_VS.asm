//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// Position                 0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// Texcoord                 0   xy          0     NONE   float   xy  
// SV_Position              0   xyzw        1      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_input v0.xy
dcl_output o0.xy
dcl_output_siv o1.xyzw, position
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- pos.x; v0.y <- pos.y; 
//   o1.x <- <main return value>.pos.x; o1.y <- <main return value>.pos.y; o1.z <- <main return value>.pos.z; o1.w <- <main return value>.pos.w; 
//   o0.x <- <main return value>.uv.x; o0.y <- <main return value>.uv.y
//
#line 10 "F:\MyRepo\DirectXRenderer\Sandbox\asset\shader\Fullscreen_VS.hlsl"
mov r0.xy, v0.xyxx  // r0.x <- vso.pos.x; r0.y <- vso.pos.y
mov r0.zw, l(0,0,0,1.000000)  // r0.z <- vso.pos.z; r0.w <- vso.pos.w

#line 12
itof r1.x, l(1)
add r1.x, r1.x, v0.x
div r1.x, r1.x, l(2.000000)  // r1.x <- vso.uv.x
itof r1.z, l(1)
mov r1.z, -r1.z
add r1.z, r1.z, v0.y
mov r1.z, -r1.z
div r1.y, r1.z, l(2.000000)  // r1.y <- vso.uv.y

#line 13
mov o1.xyzw, r0.xyzw
mov o0.xy, r1.xyxx
ret 
// Approximately 13 instruction slots used
