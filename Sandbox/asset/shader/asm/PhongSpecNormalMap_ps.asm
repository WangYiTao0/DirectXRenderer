//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PointLightCBuf
// {
//
//   float3 viewLightPos;               // Offset:    0 Size:    12
//   float3 ambient;                    // Offset:   16 Size:    12
//   float3 diffuseColor;               // Offset:   32 Size:    12
//   float diffuseIntensity;            // Offset:   44 Size:     4
//   float attConst;                    // Offset:   48 Size:     4
//   float attLin;                      // Offset:   52 Size:     4
//   float attQuad;                     // Offset:   56 Size:     4
//
// }
//
// cbuffer ObjectCBuf
// {
//
//   bool normalMapEnabled;             // Offset:    0 Size:     4
//   bool specularMapEnabled;           // Offset:    4 Size:     4
//   bool hasGloss;                     // Offset:    8 Size:     4
//   float specularPowerConst;          // Offset:   12 Size:     4
//   float3 specularColor;              // Offset:   16 Size:    12
//   float specularMapWeight;           // Offset:   28 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// splr                              sampler      NA          NA             s0      1 
// tex                               texture  float4          2d             t0      1 
// spec                              texture  float4          2d             t1      1 
// nmap                              texture  float4          2d             t2      1 
// PointLightCBuf                    cbuffer      NA          NA            cb0      1 
// ObjectCBuf                        cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// Position                 0   xyz         0     NONE   float   xyz 
// Normal                   0   xyz         1     NONE   float   xyz 
// Tangent                  0   xyz         2     NONE   float   xyz 
// Bitangent                0   xyz         3     NONE   float   xyz 
// Texcoord                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 6
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t0.xyzw, s0
dp3 r1.x, v1.xyzx, v1.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v1.xyzx
if_nz cb1[0].x
  dp3 r1.w, v2.xyzx, v2.xyzx
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v2.xyzx
  dp3 r1.w, v3.xyzx, v3.xyzx
  rsq r1.w, r1.w
  mul r3.xyz, r1.wwww, v3.xyzx
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, v4.xyxx, t2.xyzw, s0
  mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.yyyy
  mad r2.xyz, r4.xxxx, r2.xyzx, r3.xyzx
  mad r2.xyz, r4.zzzz, r1.xyzx, r2.xyzx
  dp3 r1.w, r2.xyzx, r2.xyzx
  rsq r1.w, r1.w
  mul r1.xyz, r1.wwww, r2.xyzx
endif 
add r2.xyz, -v0.xyzx, cb0[0].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
sqrt r2.w, r1.w
div r3.xyz, r2.xyzx, r2.wwww
if_nz cb1[0].y
  sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v4.xyxx, t1.xyzw, s0
  mul r4.xyz, r4.xyzx, cb1[1].wwww
  mul r3.w, r4.w, l(13.000000)
  exp r3.w, r3.w
  movc r3.w, cb1[0].z, r3.w, cb1[0].w
else 
  mov r4.xyz, cb1[1].xyzx
  mov r3.w, cb1[0].w
endif 
mad r2.w, cb0[3].y, r2.w, cb0[3].x
mad r1.w, cb0[3].z, r1.w, r2.w
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mul r5.xyz, cb0[2].wwww, cb0[2].xyzx
mul r5.xyz, r1.wwww, r5.xyzx
dp3 r2.w, r3.xyzx, r1.xyzx
max r2.w, r2.w, l(0.000000)
dp3 r3.x, r2.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, r3.xxxx
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r2.xyzx
dp3 r2.x, r1.xyzx, r1.xyzx
rsq r2.x, r2.x
mul r1.xyz, r1.xyzx, r2.xxxx
dp3 r2.x, v0.xyzx, v0.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, v0.xyzx
mul r3.xyz, r4.xyzx, r1.wwww
dp3 r1.x, -r1.xyzx, r2.xyzx
max r1.x, r1.x, l(0.000000)
log r1.x, r1.x
mul r1.x, r1.x, r3.w
exp r1.x, r1.x
mul r1.xyz, r1.xxxx, r3.xyzx
mad r2.xyz, r5.xyzx, r2.wwww, cb0[1].xyzx
mad_sat o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
mov o0.w, r0.w
ret 
// Approximately 61 instruction slots used
