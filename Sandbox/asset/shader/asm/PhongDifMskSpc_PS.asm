//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PointLightCBuf
// {
//
//   float3 viewLightPos;               // Offset:    0 Size:    12
//   float3 ambient;                    // Offset:   16 Size:    12
//   float3 diffuseColor;               // Offset:   32 Size:    12
//   float diffuseIntensity;            // Offset:   44 Size:     4
//   float attConst;                    // Offset:   48 Size:     4
//   float attLin;                      // Offset:   52 Size:     4
//   float attQuad;                     // Offset:   56 Size:     4
//
// }
//
// cbuffer ObjectCBuf
// {
//
//   bool useGlossAlpha;                // Offset:    0 Size:     4
//   bool useSpecularMap;               // Offset:    4 Size:     4
//   float3 specularColor;              // Offset:   16 Size:    12
//   float specularWeight;              // Offset:   28 Size:     4
//   float specularGloss;               // Offset:   32 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// splr                              sampler      NA          NA             s0      1 
// ssam                            sampler_c      NA          NA             s1      1 
// tex                               texture  float4          2d             t0      1 
// spec                              texture  float4          2d             t1      1 
// smap                              texture  float4        cube             t3      1 
// PointLightCBuf                    cbuffer      NA          NA            cb0      1 
// ObjectCBuf                        cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// Position                 0   xyz         0     NONE   float   xyz 
// Normal                   0   xyz         1     NONE   float   xyz 
// Texcoord                 0   xy          2     NONE   float   xy  
// ShadowPosition           0   xyzw        3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 5
dp3 r0.x, v3.xyzx, v3.xyzx
rsq r0.y, r0.x
mul r0.yzw, r0.yyyy, v3.xxyz
sqrt r0.x, r0.x
mul r0.x, r0.x, l(0.010000)
sample_c_lz_indexable(texturecube)(float,float,float,float) r0.x, r0.yzwy, t3.xxxx, s1, r0.x
ne r0.y, r0.x, l(0.000000)
if_nz r0.y
  dp3 r0.y, v1.xyzx, v1.xyzx
  rsq r0.y, r0.y
  mul r0.yzw, r0.yyyy, v1.xxyz
  add r1.xyz, -v0.xyzx, cb0[0].xyzx
  dp3 r1.w, r1.xyzx, r1.xyzx
  sqrt r2.x, r1.w
  div r2.yzw, r1.xxyz, r2.xxxx
  sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v2.xyxx, t1.xyzw, s0
  movc r3.xyz, cb1[0].yyyy, r3.xyzx, cb1[1].xyzx
  mul r3.w, r3.w, l(13.000000)
  exp r3.w, r3.w
  movc r3.w, cb1[0].x, r3.w, cb1[2].x
  mad r2.x, cb0[3].y, r2.x, cb0[3].x
  mad r1.w, cb0[3].z, r1.w, r2.x
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mul r4.xyz, cb0[2].wwww, cb0[2].xyzx
  mul r4.xyz, r1.wwww, r4.xyzx
  dp3 r2.x, r2.yzwy, r0.yzwy
  max r2.x, r2.x, l(0.000000)
  mul r2.xyz, r2.xxxx, r4.xyzx
  mul r3.xyz, r3.xyzx, cb0[2].xyzx
  dp3 r2.w, r1.xyzx, r0.yzwy
  mul r0.yzw, r0.yyzw, r2.wwww
  mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), -r1.xxyz
  dp3 r1.x, r0.yzwy, r0.yzwy
  rsq r1.x, r1.x
  mul r0.yzw, r0.yyzw, r1.xxxx
  dp3 r1.x, v0.xyzx, v0.xyzx
  rsq r1.x, r1.x
  mul r1.xyz, r1.xxxx, v0.xyzx
  mul r3.xyz, r1.wwww, r3.xyzx
  mul r3.xyz, r3.xyzx, cb1[1].wwww
  dp3 r0.y, -r0.yzwy, r1.xyzx
  max r0.y, r0.y, l(0.000000)
  log r0.y, r0.y
  mul r0.y, r0.y, r3.w
  exp r0.y, r0.y
  mul r0.yzw, r0.yyyy, r3.xxyz
  mul r1.xyz, r0.xxxx, r2.xyzx
  mul r0.xyz, r0.xxxx, r0.yzwy
else 
  mov r1.xyz, l(0,0,0,0)
  mov r0.xyz, l(0,0,0,0)
endif 
add r1.xyz, r1.xyzx, cb0[1].xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v2.xyxx, t0.xyzw, s0
mad_sat o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 57 instruction slots used
