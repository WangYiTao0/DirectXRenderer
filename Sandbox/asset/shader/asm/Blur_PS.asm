//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Kernel
// {
//
//   uint nTaps;                        // Offset:    0 Size:     4
//   float coefficients[15];            // Offset:   16 Size:   228
//
// }
//
// cbuffer Control
// {
//
//   bool horizontal;                   // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// splr                              sampler      NA          NA             s0      1 
// tex                               texture  float4          2d             t0      1 
// Kernel                            cbuffer      NA          NA            cb0      1 
// Control                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// Texcoord                 0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[16], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_temps 4
resinfo_indexable(texture2d)(float,float,float,float)_uint r0.xy, l(0), t0.xyzw
utof r0.xy, r0.xyxx
div r0.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyxx
mov r0.z, l(0)
movc r0.xy, cb1[0].xxxx, r0.xzxx, r0.zyzz
ushr r0.z, cb0[0].x, l(1)
ineg r0.w, r0.z
mov r1.xyzw, l(0,0,0,0)
mov r2.x, r0.w
loop 
  ilt r2.y, r0.z, r2.x
  breakc_nz r2.y
  itof r2.y, r2.x
  mad r2.yz, r0.xxyx, r2.yyyy, v0.xxyx
  sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.yzyy, t0.xyzw, s0
  iadd r2.y, r0.z, r2.x
  mad r1.xyzw, r3.xyzw, cb0[r2.y + 1].xxxx, r1.xyzw
  iadd r2.x, r2.x, l(1)
endloop 
mov o0.xyzw, r1.xyzw
ret 
// Approximately 21 instruction slots used
